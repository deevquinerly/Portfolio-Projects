
Select *
From [Nashville Housing]

-------------------------------------------------

--Standardize Date Format

Select SaleDate, Convert(Date, SaleDate)
From [Nashville Housing]


Update [Nashville Housing]
SET SaleDate = Convert(Date, SaleDate)


ALTER TABLE [Nashville Housing]
Add SaleDateConverted Date; 

Update [Nashville Housing]
Set SaleDateConverted = Convert(Date, SaleDate)

--------------------------

--Populate Property Address Data

Select *
From [Nashville Housing]
--Where PropertyAddress is null
order by ParcelID



Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From [Nashville Housing] a
Join [Nashville Housing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
From [Nashville Housing] a
Join [Nashville Housing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]

--------------------------------

--Breaking out Property Address into Individual Columns (Address, City, State)

Select PropertyAddress
From [Nashville Housing]


Select 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) as Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) as City
From [Nashville Housing]


ALTER TABLE [Nashville Housing]
Add PropertySplitAddress Nvarchar(255); 

Update [Nashville Housing]
Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1)

ALTER TABLE [Nashville Housing]
Add PropertySplitCity Nvarchar(255); 

Update [Nashville Housing]
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress))

---------------------------------------------

--Breaking out Owner Address into Individual Columns (Address, City, State)

Select *
From [Nashville Housing]

Select
PARSENAME(Replace(OwnerAddress, ',', '.') , 3)
, PARSENAME(Replace(OwnerAddress, ',', '.') , 2)
,PARSENAME(Replace(OwnerAddress, ',', '.') , 1)
From [Nashville Housing]


ALTER TABLE [Nashville Housing]
Add OwnerSplitAddress Nvarchar(255); 

Update [Nashville Housing]
Set OwnerSplitAddress = PARSENAME(Replace(OwnerAddress, ',', '.') , 3)


ALTER TABLE [Nashville Housing]
Add OwnerSplitCity Nvarchar(255); 

Update [Nashville Housing]
Set OwnerSplitCity = PARSENAME(Replace(OwnerAddress, ',', '.') , 2)


ALTER TABLE [Nashville Housing]
Add OwnerSplitState Nvarchar(255); 

Update [Nashville Housing]
Set OwnerSplitState = PARSENAME(Replace(OwnerAddress, ',', '.') , 1)



--Changing Y and N to Yes and No in "Sold as Vacant" field

 Select Distinct(SoldAsVacant), Count(SoldAsVacant)
 From [Nashville Housing]
 Group by SoldAsVacant
 Order by 2


 Select SoldAsVacant
 , Case When SoldAsVacant = 'Y' Then 'Yes'
		When SoldasVacant = 'N' Then 'No'
		ELSE SoldAsVacant
		END
From [Nashville Housing]


Update [Nashville Housing]
SET SoldAsVacant = Case When SoldAsVacant = 'Y' Then 'Yes'
		When SoldasVacant = 'N' Then 'No'
		ELSE SoldAsVacant
		END


--Remove Duplicates

WITH RowNumCTE AS(
Select *, 
	ROW_NUMBER() Over(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY UniqueID
				 ) row_num

From [Nashville Housing]
--Order by ParcelID
)

DELETE
From RowNumCTE
Where row_num > 1
--Order by PropertyAddress


--Delete Unused Columns

Select *
From [Nashville Housing]

ALTER TABLE [Nashville Housing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE [Nashville Housing]
DROP COLUMN SaleDate
